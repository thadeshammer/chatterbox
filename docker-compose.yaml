services:
  postgres:
    image: postgres:16.3
    restart: always
    environment:
      POSTGRES_DB: chatterboxdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/datastore/postgres_superuser_password.txt
      POSTGRES_INITDB_ARGS: "--username=postgres --pwfile=/run/secrets/datastore/postgres_superuser_password.txt"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./secrets/datastore/:/run/secrets/datastore
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: "pg_isready -U postgres -d chatterboxdb -h localhost -p 5432 > /tmp/pg_isready.log 2>&1 || (cat /tmp/pg_isready.log && exit 1)"
      interval: 30s
      timeout: 10s
      retries: 5

  test-postgres:
    image: postgres:16.3
    restart: always
    environment:
      POSTGRES_DB: chatterbox_testdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/datastore/test_postgres_superuser_password.txt
      POSTGRES_INITDB_ARGS: "--username=postgres --pwfile=/run/secrets/datastore/test_postgres_superuser_password.txt"
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
      - ./secrets/datastore/:/run/secrets/datastore
      - ./init-test-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "5433:5432"
    healthcheck:
      test: "pg_isready -U postgres -d chatterboxdb -h localhost -p 5432 > /tmp/pg_isready.log 2>&1 || (cat /tmp/pg_isready.log && exit 1)"
      interval: 30s
      timeout: 10s
      retries: 5

  datastore:
    build:
      context: .
      dockerfile: services/Dockerfile-datastore
    command: >
      uvicorn datastore.__init__:app
      --host 0.0.0.0
      --port 443
      --ssl-keyfile /run/secrets/cert/key.pem
      --ssl-certfile /run/secrets/cert/cert.pem
    restart: "no"
    environment:
      ENVIRONMENT: prod
      LOG_CFG: /app/datastore/logging_config.yaml
      LOCAL_TIMEZONE: America/New_York
      CERT_PASSKEY: ${CERT_PASSKEY}
      CERT_PATH: /run/secrets/certs/cert.pem
      KEY_PATH: /run/secrets/certs/key.pem
      DATABASE_PREFIX: postgresql+asyncpg://
      DATABASE_NAME: chatterboxdb
      DATABASE_USER_FILE: /run/secrets/datastore/postgres_user.txt
      DATABASE_USER_PASSWORD_FILE: /run/secrets/datastore/postgres_password.txt
      DB_SERVICE_NAME: postgres
      DB_PORT: 5432
      TEST_DB_NAME: chatterbox_testdb
      TEST_DATABASE_USER: $(cat /run/secrets/datastore/test_postgres_user.txt)
      TEST_DB_SERVICE_NAME: test-postgres
      TEST_DB_PORT: 5433
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB_INDEX: 0
    volumes:
      - ./logs:/app/logs
    ports:
      - "443:443"
    depends_on:
      postgres:
        condition: service_healthy
      test-postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:443/test"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  test-redis:
    image: redis:7.0
    ports:
      - "63790:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
    driver: local
  test_postgres_data:
    driver: local
